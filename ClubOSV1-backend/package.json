{
  "name": "clubos-backend",
  "version": "1.12.1",
  "description": "ClubOS Backend - AI-powered golf simulator management with NinjaOne integration",
  "main": "dist/index.js",
  "scripts": {
    "dev": "tsx watch src/index.ts",
    "build": "rm -rf dist && tsc --noEmit false --skipLibCheck true && npm run copy:assets",
    "copy:assets": "npm run copy:knowledge && npm run copy:database && npm run copy:sops && npm run copy:assistant-instructions && npm run copy:clubos-agents",
    "copy:knowledge": "cp -r src/knowledge-base dist/ 2>/dev/null || echo 'No knowledge base files to copy'",
    "copy:database": "cp -r src/database dist/ 2>/dev/null || echo 'No database files to copy'",
    "copy:sops": "cp -r src/sops dist/ 2>/dev/null || echo 'No sops directory to copy'",
    "copy:assistant-instructions": "cp -r src/assistant-instructions dist/ 2>/dev/null || echo 'No assistant-instructions to copy'",
    "copy:clubos-agents": "cp -r 'src/ClubOS Agents' dist/ 2>/dev/null || echo 'No ClubOS Agents to copy'",
    "start": "node dist/index.js",
    "start:prod": "node dist/index.js",
    "start:safe": "NODE_ENV=production node --max-old-space-size=512 dist/index.js || npm run start:safe",
    "lint": "eslint src --ext .ts",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:unit": "jest --testPathPattern=unit",
    "test:integration": "jest --testPathPattern=integration",
    "create:admin": "tsx src/scripts/createAdmin.ts",
    "create:kiosk": "tsx src/scripts/createKioskUser.ts",
    "reset:admin": "tsx src/scripts/freshAdmin.ts",
    "clean": "rimraf dist",
    "typecheck": "tsc --noEmit",
    "check": "node scripts/check-config.js",
    "check:env": "node scripts/check-config.js",
    "test:unifi": "tsx scripts/test-unifi-connection.ts",
    "test:oauth": "tsx scripts/test-oauth-doors.ts",
    "test:session": "tsx scripts/test-session.ts",
    "unlock:door": "tsx scripts/unlock-door.ts",
    "setup:unifi": "./scripts/setup-unifi-access.sh",
    "test:unifi-tunnels": "tsx scripts/test-cloudflare-tunnels.ts",
    "test:unifi-doors": "TEST_DOOR_UNLOCK=false tsx scripts/test-cloudflare-tunnels.ts",
    "list:unifi-doors": "tsx scripts/list-unifi-doors.ts",
    "migrate:cloudflare": "tsx scripts/migrate-to-cloudflare.ts",
    "generate-embeddings": "tsx scripts/generate-pattern-embeddings.ts",
    "deploy-semantic-search": "./scripts/deploy-semantic-search.sh",
    "migrate:cloudflare:test": "MIGRATION_TEST_MODE=true tsx scripts/migrate-to-cloudflare.ts",
    "migrate:rollback": "tsx scripts/rollback-cloudflare.ts",
    "unifi:disable-cloudflare": "tsx scripts/disable-cloudflare.ts",
    "unifi:clear-cache": "tsx scripts/clear-unifi-cache.ts",
    "logs:unifi": "tail -f logs/unifi-access.log",
    "health:unifi": "tsx scripts/check-unifi-health.ts",
    "setup:cloudflare-tunnel": "./scripts/setup-cloudflare-tunnel.sh",
    "consolidate:migrations": "tsx src/scripts/consolidate-migrations.ts",
    "consolidate:migrations:dry": "tsx src/scripts/consolidate-migrations.ts --dry-run",
    "migrate": "tsx src/scripts/migrate.ts",
    "migrate:up": "tsx src/scripts/migrate.ts up",
    "migrate:down": "tsx src/scripts/migrate.ts down",
    "migrate:status": "tsx src/scripts/migrate.ts status",
    "migrate:create": "tsx src/scripts/migrate.ts create",
    "db:migrate": "tsx src/utils/migrationRunner.ts migrate",
    "db:rollback": "tsx src/utils/migrationRunner.ts rollback",
    "db:status": "tsx src/utils/migrationRunner.ts status",
    "db:validate": "tsx src/utils/migrationRunner.ts validate",
    "db:reset": "tsx src/utils/migrationRunner.ts reset",
    "db:migrate:dry": "DRY_RUN=true tsx src/utils/migrationRunner.ts migrate",
    "generate:secrets": "cd .. && ./generate-secrets.sh",
    "setup:db": "node src/scripts/setupDatabase.js",
    "db:setup": "node dist/scripts/setupDatabase.js",
    "setup:user-settings": "tsx scripts/setup-user-settings.ts",
    "setup:user-settings:interactive": "tsx scripts/setup-user-settings-interactive.ts",
    "test:openphone": "tsx src/scripts/test-openphone.ts",
    "verify:sop": "tsx src/scripts/verify-sop-setup.ts",
    "migrate:sop": "tsx src/scripts/run-sop-migrations.ts",
    "postbuild": "echo 'Build completed. All assets copied.'"
  },
  "keywords": [
    "clubos",
    "golf",
    "simulator",
    "backend"
  ],
  "author": "ClubOSV1",
  "license": "ISC",
  "dependencies": {
    "@sentry/node": "^9.42.0",
    "@sentry/profiling-node": "^9.42.0",
    "@slack/web-api": "^7.9.3",
    "@slack/webhook": "^7.0.2",
    "@types/cookie-parser": "^1.4.9",
    "@types/ioredis": "^4.28.10",
    "@types/multer": "^2.0.0",
    "@types/tough-cookie": "^4.0.5",
    "async-mutex": "^0.5.0",
    "axios": "^1.11.0",
    "bcrypt": "^5.1.1",
    "bcryptjs": "^2.4.3",
    "cache-manager": "^5.7.6",
    "cache-manager-redis-yet": "^4.2.0",
    "compression": "^1.7.4",
    "cookie-parser": "^1.4.7",
    "cors": "^2.8.5",
    "date-fns": "^3.2.0",
    "dotenv": "^16.6.1",
    "express": "^4.18.2",
    "express-mongo-sanitize": "^2.2.0",
    "express-rate-limit": "^7.1.5",
    "express-validator": "^7.0.1",
    "helmet": "^7.1.0",
    "hpp": "^0.2.3",
    "ioredis": "^5.7.0",
    "joi": "^17.11.0",
    "jsonwebtoken": "^9.0.2",
    "morgan": "^1.10.0",
    "multer": "^2.0.2",
    "node-cache": "^5.1.2",
    "node-cron": "^3.0.3",
    "openai": "^4.24.7",
    "pg-hstore": "^2.3.4",
    "rate-limiter-flexible": "^3.0.6",
    "sequelize": "^6.37.7",
    "tough-cookie": "^6.0.0",
    "unifi-access": "^1.3.2",
    "uuid": "^9.0.1",
    "web-push": "^3.6.7",
    "winston": "^3.11.0"
  },
  "devDependencies": {
    "@types/bcrypt": "^5.0.2",
    "@types/bcryptjs": "^2.4.6",
    "@types/compression": "^1.7.5",
    "@types/cors": "^2.8.17",
    "@types/dotenv": "^6.1.1",
    "@types/express": "^4.17.21",
    "@types/hpp": "^0.2.5",
    "@types/jest": "^29.5.11",
    "@types/jsonwebtoken": "^9.0.5",
    "@types/morgan": "^1.9.9",
    "@types/node": "^20.19.9",
    "@types/pg": "^8.15.4",
    "@types/supertest": "^6.0.2",
    "@types/uuid": "^9.0.7",
    "@types/ws": "^8.18.1",
    "@typescript-eslint/eslint-plugin": "^6.18.0",
    "@typescript-eslint/parser": "^6.18.0",
    "eslint": "^8.56.0",
    "jest": "^29.7.0",
    "jest-mock-extended": "^3.0.5",
    "pg": "^8.16.3",
    "rimraf": "^5.0.5",
    "supertest": "^6.3.4",
    "ts-jest": "^29.1.1",
    "tsx": "^4.7.0",
    "typescript": "^5.8.3",
    "ws": "^8.18.3"
  },
  "engines": {
    "node": ">=18.0.0"
  }
}
