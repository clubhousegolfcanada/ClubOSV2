-- Indexes

CREATE UNIQUE INDEX "Users_email_key" ON public."Users" USING btree (email);
CREATE INDEX idx_access_logs_created_at ON public.access_logs USING btree ("createdAt");
CREATE INDEX idx_access_logs_user_id ON public.access_logs USING btree (user_id);
CREATE UNIQUE INDEX achievements_code_key ON public.achievements USING btree (code);
CREATE INDEX idx_achievements_auto_award ON public.achievements USING btree (auto_award) WHERE (auto_award = true);
CREATE INDEX idx_achievements_code ON public.achievements USING btree (code);
CREATE INDEX idx_admin_actions_admin_id ON public.admin_actions USING btree (admin_id);
CREATE INDEX idx_admin_actions_created ON public.admin_actions USING btree (created_at DESC);
CREATE INDEX idx_admin_actions_target_user ON public.admin_actions USING btree (target_user_id);
CREATE INDEX idx_admin_actions_type ON public.admin_actions USING btree (action_type);
CREATE UNIQUE INDEX ai_automation_features_feature_key_key ON public.ai_automation_features USING btree (feature_key);
CREATE INDEX idx_ai_features_category ON public.ai_automation_features USING btree (category);
CREATE INDEX idx_ai_features_enabled ON public.ai_automation_features USING btree (enabled);
CREATE UNIQUE INDEX ai_automation_response_tracking_conversation_id_feature_key_key ON public.ai_automation_response_tracking USING btree (conversation_id, feature_key);
CREATE INDEX idx_ai_rules_feature ON public.ai_automation_rules USING btree (feature_id);
CREATE INDEX idx_ai_usage_created ON public.ai_automation_usage USING btree (created_at DESC);
CREATE INDEX idx_ai_usage_feature ON public.ai_automation_usage USING btree (feature_id);
CREATE INDEX idx_ai_prompt_template_history_template ON public.ai_prompt_template_history USING btree (template_id);
CREATE UNIQUE INDEX ai_prompt_templates_name_key ON public.ai_prompt_templates USING btree (name);
CREATE INDEX idx_ai_prompt_templates_category ON public.ai_prompt_templates USING btree (category);
CREATE INDEX idx_ai_prompt_templates_name ON public.ai_prompt_templates USING btree (name);
CREATE INDEX idx_assistant_knowledge_assistant_id ON public.assistant_knowledge USING btree (assistant_id);
CREATE INDEX idx_auth_logs_action ON public.auth_logs USING btree (action);
CREATE INDEX idx_auth_logs_created_at ON public.auth_logs USING btree ("createdAt");
CREATE INDEX idx_auth_logs_user_id ON public.auth_logs USING btree (user_id);
CREATE UNIQUE INDEX badge_progress_user_id_badge_id_key ON public.badge_progress USING btree (user_id, badge_id);
CREATE INDEX idx_badge_progress_badge ON public.badge_progress USING btree (badge_id);
CREATE INDEX idx_badge_progress_user ON public.badge_progress USING btree (user_id, is_complete);
CREATE UNIQUE INDEX badge_rules_badge_id_rule_type_key ON public.badge_rules USING btree (badge_id, rule_type);
CREATE INDEX idx_badge_rules_active ON public.badge_rules USING btree (trigger_event, is_active);
CREATE UNIQUE INDEX badges_key_key ON public.badges USING btree (key);
CREATE INDEX idx_badges_active ON public.badges USING btree (is_active, category);
CREATE INDEX idx_badges_seasonal ON public.badges USING btree (season_id) WHERE (is_seasonal = true);
CREATE UNIQUE INDEX booking_participants_booking_share_id_user_id_key ON public.booking_participants USING btree (booking_share_id, user_id);
CREATE INDEX idx_booking_participants_user ON public.booking_participants USING btree (user_id);
CREATE UNIQUE INDEX booking_rewards_hubspot_deal_id_key ON public.booking_rewards USING btree (hubspot_deal_id);
CREATE INDEX idx_booking_rewards_hubspot ON public.booking_rewards USING btree (hubspot_deal_id);
CREATE INDEX idx_booking_rewards_status_date ON public.booking_rewards USING btree (status, reward_date);
CREATE INDEX idx_booking_rewards_user ON public.booking_rewards USING btree (user_id);
CREATE INDEX idx_booking_shares_date ON public.booking_shares USING btree (booking_date);
CREATE INDEX idx_booking_shares_event ON public.booking_shares USING btree (event_id);
CREATE INDEX idx_booking_shares_shared_by ON public.booking_shares USING btree (shared_by);
CREATE INDEX idx_bookings_simulator_id ON public.bookings USING btree (simulator_id);
CREATE INDEX idx_bookings_start_time ON public.bookings USING btree (start_time);
CREATE INDEX idx_bookings_status ON public.bookings USING btree (status);
CREATE INDEX idx_bookings_user_id ON public.bookings USING btree (user_id);
CREATE INDEX idx_cc_transactions_challenge ON public.cc_transactions USING btree (challenge_id) WHERE (challenge_id IS NOT NULL);
CREATE INDEX idx_cc_transactions_type ON public.cc_transactions USING btree (type, created_at DESC);
CREATE INDEX idx_cc_transactions_user ON public.cc_transactions USING btree (user_id, created_at DESC);
CREATE INDEX idx_audit_challenge ON public.challenge_audit USING btree (challenge_id, created_at DESC);
CREATE INDEX idx_audit_event ON public.challenge_audit USING btree (event_type, created_at DESC);
CREATE INDEX idx_audit_user ON public.challenge_audit USING btree (user_id, created_at DESC) WHERE (user_id IS NOT NULL);
CREATE UNIQUE INDEX challenge_disputes_challenge_id_key ON public.challenge_disputes USING btree (challenge_id);
CREATE INDEX idx_disputes_challenge ON public.challenge_disputes USING btree (challenge_id);
CREATE INDEX idx_disputes_status ON public.challenge_disputes USING btree (status, priority, filed_at);
CREATE INDEX idx_disputes_user ON public.challenge_disputes USING btree (filed_by);
CREATE UNIQUE INDEX challenge_no_shows_challenge_id_user_id_key ON public.challenge_no_shows USING btree (challenge_id, user_id);
CREATE INDEX idx_no_shows_challenge ON public.challenge_no_shows USING btree (challenge_id);
CREATE INDEX idx_no_shows_user ON public.challenge_no_shows USING btree (user_id, created_at DESC);
CREATE UNIQUE INDEX challenge_plays_challenge_id_user_id_key ON public.challenge_plays USING btree (challenge_id, user_id);
CREATE UNIQUE INDEX challenge_plays_trackman_round_id_key ON public.challenge_plays USING btree (trackman_round_id);
CREATE INDEX idx_plays_challenge ON public.challenge_plays USING btree (challenge_id);
CREATE INDEX idx_plays_trackman ON public.challenge_plays USING btree (trackman_round_id) WHERE (trackman_round_id IS NOT NULL);
CREATE INDEX idx_plays_user ON public.challenge_plays USING btree (user_id, played_at DESC);
CREATE UNIQUE INDEX challenge_results_challenge_id_key ON public.challenge_results USING btree (challenge_id);
CREATE INDEX idx_results_challenge ON public.challenge_results USING btree (challenge_id);
CREATE INDEX idx_results_loser ON public.challenge_results USING btree (loser_user_id, resolved_at DESC);
CREATE INDEX idx_results_winner ON public.challenge_results USING btree (winner_user_id, resolved_at DESC);
CREATE INDEX idx_challenge_settings_active ON public.challenge_settings_catalog USING btree (is_active, category);
CREATE INDEX idx_challenge_settings_popular ON public.challenge_settings_catalog USING btree (times_used DESC);
CREATE UNIQUE INDEX challenge_winner_selections_challenge_id_user_id_key ON public.challenge_winner_selections USING btree (challenge_id, user_id);
CREATE INDEX idx_winner_selections_challenge ON public.challenge_winner_selections USING btree (challenge_id);
CREATE INDEX idx_winner_selections_timestamp ON public.challenge_winner_selections USING btree (selected_at DESC);
CREATE INDEX idx_winner_selections_user ON public.challenge_winner_selections USING btree (user_id);
CREATE INDEX idx_challenges_acceptor ON public.challenges USING btree (acceptor_id, status);
CREATE INDEX idx_challenges_creator ON public.challenges USING btree (creator_id, status);
CREATE INDEX idx_challenges_expires ON public.challenges USING btree (expires_at) WHERE (status = ANY (ARRAY['accepted'::challenge_status, 'active'::challenge_status, 'awaiting_sync'::challenge_status]));
CREATE INDEX idx_challenges_season ON public.challenges USING btree (season_id, resolved_at);
CREATE INDEX idx_challenges_status ON public.challenges USING btree (status, expires_at);
CREATE UNIQUE INDEX champion_markers_user_id_event_id_key ON public.champion_markers USING btree (user_id, event_id);
CREATE INDEX idx_champion_markers_user ON public.champion_markers USING btree (user_id, is_active);
CREATE INDEX idx_champion_markers_year ON public.champion_markers USING btree (year, event_type);
CREATE INDEX idx_checklist_submissions_category ON public.checklist_submissions USING btree (category);
CREATE INDEX idx_checklist_submissions_completion_time ON public.checklist_submissions USING btree (completion_time DESC);
CREATE INDEX idx_checklist_submissions_location ON public.checklist_submissions USING btree (location);
CREATE INDEX idx_checklist_submissions_type ON public.checklist_submissions USING btree (type);
CREATE INDEX idx_checklist_submissions_user_id ON public.checklist_submissions USING btree (user_id);
CREATE UNIQUE INDEX checklist_task_customizations_category_type_task_id_key ON public.checklist_task_customizations USING btree (category, type, task_id);
CREATE INDEX idx_announcements_active ON public.clubhouse_announcements USING btree (is_active, start_date, end_date);
CREATE INDEX idx_clubhouse_locations_active ON public.clubhouse_locations USING btree (is_active);
CREATE INDEX idx_clubhouse_locations_city ON public.clubhouse_locations USING btree (city);
CREATE UNIQUE INDEX contact_sync_user_id_contact_hash_key ON public.contact_sync USING btree (user_id, contact_hash);
CREATE INDEX idx_contact_hash ON public.contact_sync USING btree (contact_hash);
CREATE INDEX idx_matched_user ON public.contact_sync USING btree (matched_user_id);
CREATE UNIQUE INDEX conversation_sessions_session_id_key ON public.conversation_sessions USING btree (session_id);
CREATE INDEX idx_sessions_active ON public.conversation_sessions USING btree (active);
CREATE INDEX idx_sessions_session_id ON public.conversation_sessions USING btree (session_id);
CREATE INDEX idx_sessions_user ON public.conversation_sessions USING btree (user_id);
CREATE INDEX idx_customer_interactions_created_at ON public.customer_interactions USING btree ("createdAt");
CREATE INDEX idx_customer_interactions_user_id ON public.customer_interactions USING btree (user_id);
CREATE INDEX idx_interactions_session ON public.customer_interactions USING btree (session_id);
CREATE UNIQUE INDEX customer_profiles_user_id_key ON public.customer_profiles USING btree (user_id);
CREATE INDEX idx_customer_profiles_user_id ON public.customer_profiles USING btree (user_id);
CREATE INDEX idx_customer_profiles_visibility ON public.customer_profiles USING btree (profile_visibility);
CREATE INDEX idx_door_access_log_created_at ON public.door_access_log USING btree (created_at DESC);
CREATE INDEX idx_door_access_log_location ON public.door_access_log USING btree (location);
CREATE INDEX idx_door_access_log_user_id ON public.door_access_log USING btree (user_id);
CREATE UNIQUE INDEX event_participants_event_id_user_id_key ON public.event_participants USING btree (event_id, user_id);
CREATE INDEX idx_event_participants_event_id ON public.event_participants USING btree (event_id);
CREATE INDEX idx_event_participants_user_id ON public.event_participants USING btree (user_id);
CREATE INDEX idx_events_created_by ON public.events USING btree (created_by);
CREATE INDEX idx_events_start_date ON public.events USING btree (start_date);
CREATE INDEX idx_events_status ON public.events USING btree (status);
CREATE INDEX idx_events_type ON public.events USING btree (event_type);
CREATE INDEX idx_extracted_knowledge_applied ON public.extracted_knowledge USING btree (applied_to_sop);
CREATE INDEX idx_extracted_knowledge_category ON public.extracted_knowledge USING btree (category);
CREATE INDEX idx_feedback_created_at ON public.feedback USING btree ("createdAt" DESC);
CREATE INDEX idx_feedback_is_useful ON public.feedback USING btree (is_useful);
CREATE INDEX idx_feedback_slack_thread ON public.feedback USING btree (slack_thread_ts);
CREATE INDEX idx_feedback_source ON public.feedback USING btree (feedback_source);
CREATE INDEX idx_feedback_user_id ON public.feedback USING btree (user_id);
CREATE INDEX idx_friend_activity_users ON public.friend_activities USING btree (user_id, friend_id, created_at DESC);
CREATE UNIQUE INDEX friend_group_members_group_id_user_id_key ON public.friend_group_members USING btree (group_id, user_id);
CREATE INDEX idx_friend_group_members_group ON public.friend_group_members USING btree (group_id);
CREATE INDEX idx_friend_group_members_user ON public.friend_group_members USING btree (user_id);
CREATE INDEX idx_friend_groups_owner ON public.friend_groups USING btree (owner_id);
CREATE UNIQUE INDEX friend_invitations_invitation_code_key ON public.friend_invitations USING btree (invitation_code);
CREATE INDEX idx_friend_invitations_code ON public.friend_invitations USING btree (invitation_code);
CREATE INDEX idx_friend_invitations_email ON public.friend_invitations USING btree (invitee_email) WHERE (invitee_email IS NOT NULL);
CREATE INDEX idx_friend_invitations_inviter ON public.friend_invitations USING btree (inviter_id);
CREATE INDEX idx_friend_invitations_phone ON public.friend_invitations USING btree (invitee_phone) WHERE (invitee_phone IS NOT NULL);
CREATE INDEX idx_friend_invitations_status ON public.friend_invitations USING btree (status);
CREATE UNIQUE INDEX friend_notification_preferences_user_id_key ON public.friend_notification_preferences USING btree (user_id);
CREATE UNIQUE INDEX friend_suggestions_user_id_suggested_user_id_key ON public.friend_suggestions USING btree (user_id, suggested_user_id);
CREATE INDEX idx_friend_suggestions_mutual ON public.friend_suggestions USING btree (user_id, mutual_friends_count DESC);
CREATE INDEX idx_friend_suggestions_user ON public.friend_suggestions USING btree (user_id, dismissed, relevance_score DESC);
CREATE UNIQUE INDEX friendships_user_id_friend_id_key ON public.friendships USING btree (user_id, friend_id);
CREATE INDEX idx_friendships_friend_id ON public.friendships USING btree (friend_id, status);
CREATE INDEX idx_friendships_status ON public.friendships USING btree (status);
CREATE INDEX idx_friendships_user_id ON public.friendships USING btree (user_id, status);
CREATE INDEX idx_hubspot_cache_updated ON public.hubspot_cache USING btree (updated_at);
CREATE INDEX idx_knowledge_audit_category ON public.knowledge_audit_log USING btree (category);
CREATE INDEX idx_knowledge_audit_target ON public.knowledge_audit_log USING btree (assistant_target);
CREATE INDEX idx_knowledge_audit_timestamp ON public.knowledge_audit_log USING btree ("timestamp" DESC);
CREATE INDEX idx_knowledge_category ON public.knowledge_base USING btree (category);
CREATE INDEX idx_knowledge_symptoms ON public.knowledge_base USING gin (symptoms);
CREATE INDEX idx_knowledge_captures_assistant ON public.knowledge_captures USING btree (assistant);
CREATE INDEX idx_knowledge_captures_confidence ON public.knowledge_captures USING btree (confidence DESC);
CREATE INDEX idx_knowledge_captures_created_at ON public.knowledge_captures USING btree (created_at DESC);
CREATE INDEX idx_knowledge_captures_source ON public.knowledge_captures USING btree (source);
CREATE INDEX idx_extraction_action ON public.knowledge_extraction_log USING btree (action_taken);
CREATE INDEX idx_extraction_conversation ON public.knowledge_extraction_log USING btree (conversation_id);
CREATE INDEX idx_extraction_created ON public.knowledge_extraction_log USING btree (created_at DESC);
CREATE INDEX idx_patterns_last_seen ON public.knowledge_patterns USING btree (last_seen DESC);
CREATE INDEX idx_patterns_occurrence ON public.knowledge_patterns USING btree (occurrence_count DESC);
CREATE INDEX idx_patterns_pattern ON public.knowledge_patterns USING btree (pattern);
CREATE UNIQUE INDEX knowledge_patterns_pattern_key ON public.knowledge_patterns USING btree (pattern);
CREATE INDEX idx_knowledge_confidence ON public.knowledge_store USING btree (confidence DESC);
CREATE INDEX idx_knowledge_expires ON public.knowledge_store USING btree (expires_at) WHERE (expires_at IS NOT NULL);
CREATE INDEX idx_knowledge_key ON public.knowledge_store USING btree (key);
CREATE INDEX idx_knowledge_key_pattern ON public.knowledge_store USING btree (key text_pattern_ops);
CREATE INDEX idx_knowledge_search ON public.knowledge_store USING gin (search_vector);
CREATE INDEX idx_knowledge_updated ON public.knowledge_store USING btree (updated_at DESC);
CREATE INDEX idx_knowledge_usage ON public.knowledge_store USING btree (usage_count DESC);
CREATE INDEX idx_knowledge_value ON public.knowledge_store USING gin (value);
CREATE INDEX idx_knowledge_verification ON public.knowledge_store USING btree (verification_status);
CREATE UNIQUE INDEX knowledge_store_key_key ON public.knowledge_store USING btree (key);
CREATE INDEX idx_learning_metrics_created_at ON public.learning_metrics USING btree (created_at DESC);
CREATE INDEX idx_learning_metrics_type ON public.learning_metrics USING btree (metric_type);
CREATE INDEX idx_message_suggestions_conversation ON public.message_suggestions USING btree (conversation_id);
CREATE INDEX idx_message_suggestions_phone_hash ON public.message_suggestions USING btree (phone_number_hash);
CREATE UNIQUE INDEX message_suggestions_message_id_key ON public.message_suggestions USING btree (message_id);
CREATE UNIQUE INDEX migration_history_version_key ON public.migration_history USING btree (version);
CREATE UNIQUE INDEX migrations_filename_key ON public.migrations USING btree (filename);
CREATE INDEX idx_notification_history_status ON public.notification_history USING btree (status, sent_at);
CREATE INDEX idx_notification_history_user_date ON public.notification_history USING btree (user_id, sent_at);
CREATE INDEX idx_conversations_knowledge_extracted ON public.openphone_conversations USING btree (knowledge_extracted) WHERE (knowledge_extracted = false);
CREATE INDEX idx_openphone_conversations_processed ON public.openphone_conversations USING btree (processed);
CREATE INDEX idx_openphone_phone_number ON public.openphone_conversations USING btree (phone_number);
CREATE INDEX idx_openphone_updated_at ON public.openphone_conversations USING btree (updated_at DESC);
CREATE UNIQUE INDEX openphone_conversations_conversation_id_key ON public.openphone_conversations USING btree (conversation_id);
CREATE INDEX idx_push_subs_endpoint ON public.push_subscriptions USING btree (endpoint);
CREATE INDEX idx_push_subs_user_active ON public.push_subscriptions USING btree (user_id, is_active);
CREATE UNIQUE INDEX push_subscriptions_user_id_endpoint_key ON public.push_subscriptions USING btree (user_id, endpoint);
CREATE INDEX idx_rank_assignments_percentile ON public.rank_assignments USING btree (season_id, percentile);
CREATE INDEX idx_rank_assignments_season ON public.rank_assignments USING btree (season_id, rank_tier);
CREATE INDEX idx_rank_assignments_user ON public.rank_assignments USING btree (user_id, season_id);
CREATE UNIQUE INDEX rank_assignments_user_id_season_id_key ON public.rank_assignments USING btree (user_id, season_id);
CREATE INDEX idx_rank_history_changed_at ON public.rank_history USING btree (changed_at DESC);
CREATE INDEX idx_rank_history_user_id ON public.rank_history USING btree (user_id);
CREATE INDEX idx_request_logs_created_at ON public.request_logs USING btree ("createdAt");
CREATE INDEX idx_request_logs_path ON public.request_logs USING btree (path);
CREATE INDEX idx_scoreboards_event ON public.scoreboards USING btree (event_id);
CREATE INDEX idx_scoreboards_season ON public.scoreboards USING btree (season);
CREATE INDEX idx_scoreboards_team ON public.scoreboards USING btree (team_id);
CREATE INDEX idx_seasonal_cc_earnings_leaderboard ON public.seasonal_cc_earnings USING btree (season_id, cc_net DESC);
CREATE INDEX idx_seasonal_cc_earnings_user ON public.seasonal_cc_earnings USING btree (user_id, season_id);
CREATE UNIQUE INDEX seasonal_cc_earnings_user_id_season_id_key ON public.seasonal_cc_earnings USING btree (user_id, season_id);
CREATE INDEX idx_seasons_dates ON public.seasons USING btree (start_date, end_date);
CREATE INDEX idx_seasons_is_active ON public.seasons USING btree (is_active) WHERE (is_active = true);
CREATE INDEX idx_seasons_status ON public.seasons USING btree (status, start_date);
CREATE INDEX idx_slack_messages_created_at ON public.slack_messages USING btree (created_at DESC);
CREATE INDEX idx_slack_messages_request_id ON public.slack_messages USING btree (request_id);
CREATE INDEX idx_slack_messages_thread_ts ON public.slack_messages USING btree (slack_thread_ts);
CREATE INDEX idx_slack_messages_user_id ON public.slack_messages USING btree (user_id);
CREATE UNIQUE INDEX slack_messages_slack_thread_ts_key ON public.slack_messages USING btree (slack_thread_ts);
CREATE INDEX idx_slack_replies_created_at ON public.slack_replies USING btree (created_at DESC);
CREATE INDEX idx_slack_replies_thread_ts ON public.slack_replies USING btree (thread_ts);
CREATE INDEX idx_slack_replies_timestamp ON public.slack_replies USING btree ("timestamp" DESC);
CREATE INDEX idx_slack_replies_user_id ON public.slack_replies USING btree (user_id);
CREATE INDEX idx_slack_thread_resolutions_resolved_at ON public.slack_thread_resolutions USING btree (resolved_at DESC);
CREATE INDEX idx_sop_drafts_assistant ON public.sop_drafts USING btree (assistant);
CREATE INDEX idx_sop_drafts_status ON public.sop_drafts USING btree (status);
CREATE INDEX idx_sop_embeddings_assistant ON public.sop_embeddings USING btree (assistant);
CREATE INDEX idx_sop_update_log_applied_at ON public.sop_update_log USING btree (applied_at DESC);
CREATE INDEX idx_sop_update_log_document_id ON public.sop_update_log USING btree (document_id);
CREATE INDEX idx_sop_update_queue_confidence ON public.sop_update_queue USING btree (confidence DESC);
CREATE INDEX idx_sop_update_queue_status ON public.sop_update_queue USING btree (status);
CREATE INDEX idx_stakes_challenge ON public.stakes USING btree (challenge_id);
CREATE INDEX idx_stakes_user ON public.stakes USING btree (user_id, is_locked);
CREATE UNIQUE INDEX stakes_challenge_id_user_id_key ON public.stakes USING btree (challenge_id, user_id);
CREATE INDEX idx_system_settings_category ON public.system_settings USING btree (category);
CREATE INDEX idx_system_settings_key ON public.system_settings USING btree (key);
CREATE UNIQUE INDEX system_settings_key_key ON public.system_settings USING btree (key);
CREATE INDEX idx_team_members_team_id ON public.team_members USING btree (team_id);
CREATE INDEX idx_team_members_user_id ON public.team_members USING btree (user_id);
CREATE UNIQUE INDEX team_members_team_id_user_id_key ON public.team_members USING btree (team_id, user_id);
CREATE INDEX idx_teams_created_by ON public.teams USING btree (created_by);
CREATE INDEX idx_teams_type ON public.teams USING btree (team_type);
CREATE UNIQUE INDEX teams_join_code_key ON public.teams USING btree (join_code);
CREATE INDEX idx_ticket_comments_ticket_id ON public.ticket_comments USING btree (ticket_id);
CREATE INDEX idx_tickets_assigned_to_id ON public.tickets USING btree (assigned_to_id);
CREATE INDEX idx_tickets_category ON public.tickets USING btree (category);
CREATE INDEX idx_tickets_created_at ON public.tickets USING btree ("createdAt" DESC);
CREATE INDEX idx_tickets_created_by_id ON public.tickets USING btree (created_by_id);
CREATE INDEX idx_tickets_priority ON public.tickets USING btree (priority);
CREATE INDEX idx_tickets_status ON public.tickets USING btree (status);
CREATE INDEX idx_user_achievements_achievement_id ON public.user_achievements USING btree (achievement_id);
CREATE INDEX idx_user_achievements_awarded_at ON public.user_achievements USING btree (awarded_at DESC);
CREATE INDEX idx_user_achievements_featured ON public.user_achievements USING btree (user_id, is_featured) WHERE (is_featured = true);
CREATE INDEX idx_user_achievements_tournament ON public.user_achievements USING btree (tournament_id) WHERE (tournament_id IS NOT NULL);
CREATE INDEX idx_user_achievements_user_id ON public.user_achievements USING btree (user_id);
CREATE UNIQUE INDEX user_achievements_user_id_achievement_id_tournament_id_key ON public.user_achievements USING btree (user_id, achievement_id, tournament_id);
CREATE INDEX idx_user_badges_badge ON public.user_badges USING btree (badge_id);
CREATE INDEX idx_user_badges_featured ON public.user_badges USING btree (user_id, is_featured) WHERE (is_featured = true);
CREATE INDEX idx_user_badges_user ON public.user_badges USING btree (user_id, earned_at DESC);
CREATE UNIQUE INDEX user_badges_user_id_badge_id_key ON public.user_badges USING btree (user_id, badge_id);
CREATE INDEX idx_user_blocks_blocked ON public.user_blocks USING btree (blocked_user_id);
CREATE INDEX idx_user_blocks_user ON public.user_blocks USING btree (user_id);
CREATE UNIQUE INDEX user_blocks_user_id_blocked_user_id_key ON public.user_blocks USING btree (user_id, blocked_user_id);
CREATE INDEX idx_user_clubhouses_primary ON public.user_clubhouses USING btree (user_id, is_primary);
CREATE INDEX idx_user_clubhouses_user ON public.user_clubhouses USING btree (user_id);
CREATE UNIQUE INDEX user_clubhouses_user_id_clubhouse_id_key ON public.user_clubhouses USING btree (user_id, clubhouse_id);
CREATE INDEX idx_user_settings_user_id ON public.user_settings USING btree (user_id);
CREATE UNIQUE INDEX user_settings_user_id_setting_key_key ON public.user_settings USING btree (user_id, setting_key);
CREATE INDEX idx_users_email ON public.users USING btree (email);
CREATE INDEX idx_users_role ON public.users USING btree (role);
CREATE UNIQUE INDEX users_email_key ON public.users USING btree (email);